/*  OBJECTIF

    Regardez la vidéo objectif.mp4

    ATTENTION : pensez à remplacer les ??? par votre identifiant 
    dans server/model.php avant de tester quoi que ce soit !
*/


/*  PREMIERE ETAPE

    Modification de la base de données.

    La table Repas ne permet pas d'enregistrer un numéro de semaine en l'état. Il faut la modifier
    afin qu'un menu ne soit pas associé qu'à un seul jour, mais à un jour ET un numéro de semaine.

    Q1
    Via PHPMyAdmin, modifiez ainsi la table Repas :
    - Ajoutez une colonne "semaine" en début de table (pas de majuscule, ça vous évitera des erreurs plus tard)
    - Redéfinissez la nouvelle clef primaire de la table. Quelle est-elle ?
    - En prévision des tests à venir, modifiez les numéros de semaine ainsi :
        . semaine 1 pour le lundi
        . semaine 2 pour le mardi
        . semaine 3 pour le mercredi
        . etc...
      Inutile d'ajouter des menus supplémentaires.
*/



/*  SECONDE ETAPE

    Modification de la partie cliente (application "vitrine" pour la consultation des menus)

    Q2
    Ajoutez dans le fichier index.html un champ <input> de type 'number' auquel vous n'oublierez
    pas d'attribuer un identifiant pour faciliter la sélection de ce nouvel élément HTML en JS.
    Attention, cet input ne va pas être utilisé comme un élément de formulaire (contrairement à 
    ce que vous ferez dans la partie backoffice). Donc pas besoin de <form> ici.

    Q3
    Dans le fichier script.js, modifiez la fonction requestMenu afin qu'elle effectue des requêtes
    de la forme "../server/script.php?jour=mardi&semaine=18" (mardi et 18 sont des exemples !).
    Car il faut à présent que la requête HTTP au serveur contienne 2 paramètres, jour et semaine.
    Pour obtenir le numéro de la semaine choisie par l'utilisateur, sélectionez l'élément input
    précédemment ajouté (document.querySelector...). Le nombre saisi y est mémorisé dans la propriété
    value (testez dans la console du navigateur au besoin).
    Vérifiez que les requêtes sont bien modifiées en surveillant l'onglet Network/Réseau des outils de 
    développement lorsque vous cliquez sur un des jours de la semaine ensuite.
*/



/*  TROISIEME ETAPE

    Modification de la partie backoffice (application d'administration des menus)

    Q4
    Dans le formulaire, ajoutez un élément input de type number afin de pouvoir préciser
    un numéro de semaine en plus de tout le reste. Vous prendrez soin de nommer (name) ce
    nouveau champ en l'appelant "semaine".
    Vérifiez (dans la barre d'adresse du navigateur) que lorsque vous validez le formulaire,
    le navigateur a bien ajouté le paramètre semaine à la requête (en plus de tous les autres)
*/



/*  DERNIERE ETAPE

    Modification de la partie serveur (gestion et traitement des requêtes HTTP en provenance 
    de la "vitrine" ou du backoffice)

    A ce stade, les requêtes HTTP reçues par la partie serveur (script.php précisément) contiennent
    toutes un paramètre semaine supplémentaire mais celui-ci n'est pas traité.

    Q5
    Dans script.php, modifiez d'abord le second contrôle qui traite les requêtes pour demander des menus.
    Modifiez le code pour lire le paramètre semaine en plus du paramètre jour. 
    Dans model.php, modifiez la fonction getMenu pour qu'elle prenne en compte un numéro de semaine en plus
    d'un jour. Cela nécessitera de modifier (un peu) la requête SQL effectuée par la fonction.
    Utilisez l'application "vitrine" pour vérifier le bon fonctionnement de vos modifications.
    Au passage, constatez que l'application "vitrine" plante si l'on demande un menu pour un jour et une semaine
    non présents dans la table Repas. En effet, dans ce cas, le serveur répond avec un tableau vide
    au lieu d'un tableau contenant un objet de la forme {entree:"machin", plat:"bidule", dessert:"truc"}.
    (Vous pouvez traiter ce cas de figure dans la fonction requestMenu dans script.js de la partie "vitrine")

    Q6
    Dans script.php, modifiez le premier contrôle qui traite les requêtes pour modifier des menus.
    Modifiez le code pour lire le paramètre semaine en plus du paramètre jour. 
    Dans model.php, modifiez la fonction updateMenu pour qu'elle prenne en compte un numéro de semaine en plus
    d'un jour. Cela nécessitera de modifier (un peu) la requête SQL effectuée par la fonction.
    Utilisez l'application backoffice pour vérifier le bon fonctionnement de vos modifications.

    Q7
    Si ce n'est déjà fait, utilisez le backoffice pour, non pas modifier un menu existant dans la bdd, mais 
    pour en ajouter un nouveau (par exemple, le menu du mercredi de la semaine 36).
    Vous constaterez que ça ne fonctionne pas. Pourquoi ?
    En vous aidant de la ressource suivante : https://www.mysqltutorial.org/mysql-replace.aspx
    modifiez la requête SQL de la fonction updateMenu de sorte à ce qu'elle modifie un menu lorsqu'il existe
    ou bien qu'elle l'ajoute lorsqu'il n'existe pas.
*/
